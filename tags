!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/44a0e97/
<C-H>	.vimrc	/^inoremap <C-H> <ESC><C-W><C-H>$/;"	m
<C-H>	.vimrc	/^nnoremap <C-H> <C-W><C-H>$/;"	m
<C-J>	.vimrc	/^inoremap <C-J> <ESC><C-W><C-J>$/;"	m
<C-J>	.vimrc	/^nnoremap <C-J> <C-W><C-J>$/;"	m
<C-K>	.vimrc	/^inoremap <C-K> <ESC><C-W><C-K>$/;"	m
<C-K>	.vimrc	/^nnoremap <C-K> <C-W><C-K>$/;"	m
<C-L>	.vimrc	/^inoremap <C-L> <ESC><C-W><C-L>$/;"	m
<C-L>	.vimrc	/^nnoremap <C-L> <C-W><C-L>$/;"	m
<cr>	.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> <cr> :silent! call <SID>preview_commit()<cr>$/;"	m
<leader>/	.vimrc	/^nnoremap <leader>\/ :Ack$/;"	m
<leader><space>	.vimrc	/^nnoremap <leader><space> :noh<CR>$/;"	m
<leader>b	.vimrc	/^nnoremap <leader>b $A{<CR>}<ESC>O$/;"	m
<leader>c	.vimrc	/^nnoremap <leader>c :NERDTreeToggle<CR>$/;"	m
<leader>h	.vimrc	/^nnoremap <leader>h :bp<CR>$/;"	m
<leader>j	.vimrc	/^nnoremap <leader>j Lzt$/;"	m
<leader>k	.vimrc	/^nnoremap <leader>k Hzb$/;"	m
<leader>l	.vimrc	/^nnoremap <leader>l :bn<CR>$/;"	m
<leader>m	.vimrc	/^nnoremap <leader>m :make<CR>$/;"	m
<leader>r	.vimrc	/^nnoremap <leader>r :! rscript -e "library('knitr');knit2pdf('$(ls *.Rnw)')"<CR>$/;"	m
<leader>t	.vimrc	/^nnoremap <leader>t :TlistToggle<CR>$/;"	m
<leader>u	.vimrc	/^nnoremap <leader>u :GundoToggle<CR>$/;"	m
<leader>w	.vimrc	/^nnoremap <leader>w :w<CR>$/;"	m
<space>	.vimrc	/^nnoremap <space> za$/;"	m
D	.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
DeusHlsHideCursor	.vim/colors/deus.vim	/^function! DeusHlsHideCursor()$/;"	f
DeusHlsShowCursor	.vim/colors/deus.vim	/^function! DeusHlsShowCursor()$/;"	f
Evrc	.vimrc	/^command!  Evrc :e $MYVIMRC$/;"	c
L	.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	.vim/autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
NERDTreeShowLineNumbers	.vimrc	/^let NERDTreeShowLineNumbers=1$/;"	v
Plug	.vim/autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	.vim/autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	.vim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	.vim/autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	.vim/autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	.vim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
R	.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
S	.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
Save	.vimrc	/^command!  Save :mksession!$/;"	c
Svrc	.vimrc	/^command!  Svrc :source $MYVIMRC$/;"	c
U	.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	.vim/autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
X	.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
[[	.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
]]	.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
backup_new	install.sh	/^function backup_new() {$/;"	f
d	.vim/autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	.vim/autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
dd	.vim/autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
ebrc	custom.aliases.bash	/^alias ebrc="vim $HOME\/.bashrc"$/;"	a
evrc	custom.aliases.bash	/^alias evrc="vim $HOME\/.vimrc"$/;"	a
filetypedetect	.vim/autoload/plug.vim	/^        augroup filetypedetect$/;"	a
g:_plug_bang	.vim/autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:airline#extensions#tabline#enabled	.vimrc	/^let g:airline#extensions#tabline#enabled=1 $/;"	v
g:airline#extensions#tabline#fnamemod	.vimrc	/^let g:airline#extensions#tabline#fnamemod=':t'$/;"	v
g:airline_theme	.vimrc	/^let g:airline_theme='molokai'$/;"	v
g:colors_name	.vim/colors/deus.vim	/^let g:colors_name='deus'$/;"	v
g:colors_name	.vim/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:ctrlp_match_window	.vimrc	/^let g:ctrlp_match_window = 'bottom,order:ttb'$/;"	v
g:ctrlp_switch_buffer	.vimrc	/^let g:ctrlp_switch_buffer = 0$/;"	v
g:ctrlp_working_path_mode	.vimrc	/^let g:ctrlp_working_path_mode = 'ra'$/;"	v
g:deus_bold	.vim/colors/deus.vim	/^  let g:deus_bold=1$/;"	v
g:deus_contrast_dark	.vim/colors/deus.vim	/^  let g:deus_contrast_dark='medium'$/;"	v
g:deus_contrast_light	.vim/colors/deus.vim	/^  let g:deus_contrast_light='medium'$/;"	v
g:deus_guisp_fallback	.vim/colors/deus.vim	/^  let g:deus_guisp_fallback='NONE'$/;"	v
g:deus_improved_strings	.vim/colors/deus.vim	/^  let g:deus_improved_strings=0$/;"	v
g:deus_improved_warnings	.vim/colors/deus.vim	/^  let g:deus_improved_warnings=0$/;"	v
g:deus_inverse	.vim/colors/deus.vim	/^  let g:deus_inverse=1$/;"	v
g:deus_invert_indent_guides	.vim/colors/deus.vim	/^  let g:deus_invert_indent_guides=0$/;"	v
g:deus_italic	.vim/colors/deus.vim	/^    let g:deus_italic=0$/;"	v
g:deus_italic	.vim/colors/deus.vim	/^    let g:deus_italic=1$/;"	v
g:deus_termcolors	.vim/colors/deus.vim	/^  let g:deus_termcolors=256$/;"	v
g:deus_undercurl	.vim/colors/deus.vim	/^  let g:deus_undercurl=1$/;"	v
g:deus_underline	.vim/colors/deus.vim	/^  let g:deus_underline=1$/;"	v
g:gitgutter_override_sign_column_highlight	.vim/colors/deus.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:indentLine_color_gui	.vim/colors/deus.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	.vim/colors/deus.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indent_guides_auto_colors	.vim/colors/deus.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:loaded_plug	.vim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:niji_dark_colours	.vim/colors/deus.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	.vim/colors/deus.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:plug_home	.vim/autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	.vim/autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	.vim/autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	.vim/autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	.vim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:rainbow_conf	.vim/colors/deus.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	.vim/colors/deus.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	.vim/colors/deus.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_ctermfgs	.vim/colors/deus.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	.vim/colors/deus.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rbpt_colorpairs	.vim/colors/deus.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:vimshell_escape_colors	.vim/colors/deus.vim	/^let g:vimshell_escape_colors = [$/;"	v
gV	.vimrc	/^nnoremap gV `[v`]$/;"	m
j	.vimrc	/^nnoremap j gj$/;"	m
jj	.vimrc	/^inoremap jj <ESC>$/;"	m
k	.vimrc	/^nnoremap k gk$/;"	m
load_one	install.sh	/^function load_one() {$/;"	f
load_some	install.sh	/^function load_some() {$/;"	f
m	custom.aliases.bash	/^alias m='make'$/;"	a
make	custom.aliases.bash	/^alias make=\/usr\/local\/bin\/make$/;"	a
mapleader	.vimrc	/^let mapleader=","$/;"	v
o	.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> o    :silent! call <SID>preview_commit()<cr>$/;"	m
plug#	.vim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	.vim/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	.vim/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	.vim/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	.vim/autoload/plug.vim	/^function! plug#load(...)$/;"	f
python_highlight_all	.vimrc	/^let python_highlight_all=1$/;"	v
q	.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q  :if b:plug_preview==1<bar>pc<bar>endif<bar>bd<cr>$/;"	m
q	.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
s:HL	.vim/colors/deus.vim	/^function! s:HL(group, fg, ...)$/;"	f
s:TYPE	.vim/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:append_ul	.vim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:aqua	.vim/colors/deus.vim	/^  let s:aqua   = s:ds.bright_aqua$/;"	v
s:ask	.vim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	.vim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assign_name	.vim/autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	.vim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:bang	.vim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	.vim/autoload/plug.vim	/^function! s:bar()$/;"	f
s:base_spec	.vim/autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:bg0	.vim/colors/deus.vim	/^  let s:bg0  = s:ds.dark0$/;"	v
s:bg1	.vim/colors/deus.vim	/^  let s:bg1  = s:ds.dark1$/;"	v
s:bg2	.vim/colors/deus.vim	/^  let s:bg2  = s:ds.dark2$/;"	v
s:bg3	.vim/colors/deus.vim	/^  let s:bg3  = s:ds.dark3$/;"	v
s:bg4	.vim/colors/deus.vim	/^  let s:bg4  = s:ds.dark4$/;"	v
s:blue	.vim/colors/deus.vim	/^  let s:blue   = s:ds.bright_blue$/;"	v
s:bold	.vim/colors/deus.vim	/^  let s:bold = ''$/;"	v
s:bold	.vim/colors/deus.vim	/^let s:bold = 'bold,'$/;"	v
s:check_ruby	.vim/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checkout	.vim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:chsh	.vim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	.vim/autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:color_column	.vim/colors/deus.vim	/^  let s:color_column = get(s:ds, g:deus_color_column)$/;"	v
s:color_column	.vim/colors/deus.vim	/^let s:color_column = s:bg1$/;"	v
s:compare_git_uri	.vim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:cpo_save	.vim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:define_commands	.vim/autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:delete	.vim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete_op	.vim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:diff	.vim/autoload/plug.vim	/^function! s:diff()$/;"	f
s:dirpath	.vim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:do	.vim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:doautocmd	.vim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	.vim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:ds	.vim/colors/deus.vim	/^let s:ds = {}$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.aqua   = s:aqua$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bg0 = s:bg0$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bg1 = s:bg1$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bg2 = s:bg2$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bg3 = s:bg3$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bg4 = s:bg4$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.blue   = s:blue$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bright_aqua    = ['#8ec07c', 108]     " 142-192-124$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bright_blue    = ['#83a598', 109]     " 131-165-152$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bright_green   = ['#98C379', 142]     " 184-187-38$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bright_orange  = ['#fe8019', 208]     " 254-128-25$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bright_purple  = ['#C678DD', 175]     " 211-134-155$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bright_red     = ['#fb4934', 167]     " 251-73-52$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.bright_yellow  = ['#fabd2f', 214]     " 250-189-47$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.dark0       = ['#2C323B', 235]     " 40-40-40$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.dark1       = ['#3c3836', 237]     " 60-56-54$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.dark2       = ['#2C313A', 239]     " 80-73-69$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.dark3       = ['#665c54', 241]     " 102-92-84$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.dark4       = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.dark4_256   = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.fg0 = s:fg0$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.fg1 = s:fg1$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.fg2 = s:fg2$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.fg3 = s:fg3$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.fg4 = s:fg4$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.fg4_256 = s:fg4_256$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.gray = s:gray$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.gray_244    = ['#928374', 244]     " 146-131-116$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.gray_245    = ['#928374', 245]     " 146-131-116$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.green  = s:green$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.light0      = ['#d2d2d2', 229]     " 253-244-193$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.light1      = ['#ebdbb2', 223]     " 235-219-178$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.light2      = ['#d5c4a1', 250]     " 213-196-161$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.light3      = ['#bdae93', 248]     " 189-174-147$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.light4      = ['#a89984', 246]     " 168-153-132$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.light4_256  = ['#a89984', 246]     " 168-153-132$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.orange = s:orange$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.purple = s:purple$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.red    = s:red$/;"	v
s:ds	.vim/colors/deus.vim	/^let s:ds.yellow = s:yellow$/;"	v
s:err	.vim/autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:esc	.vim/autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escrtp	.vim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:extract_name	.vim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:fg0	.vim/colors/deus.vim	/^  let s:fg0 = s:ds.light0$/;"	v
s:fg1	.vim/colors/deus.vim	/^  let s:fg1 = s:ds.light1$/;"	v
s:fg2	.vim/colors/deus.vim	/^  let s:fg2 = s:ds.light2$/;"	v
s:fg3	.vim/colors/deus.vim	/^  let s:fg3 = s:ds.light3$/;"	v
s:fg4	.vim/colors/deus.vim	/^  let s:fg4 = s:ds.light4$/;"	v
s:fg4_256	.vim/colors/deus.vim	/^  let s:fg4_256 = s:ds.light4_256$/;"	v
s:find_name	.vim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:finish	.vim/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	.vim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:first_rtp	.vim/autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:format_git_log	.vim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_message	.vim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:git_validate	.vim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version_requirement	.vim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:glob	.vim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob_dir	.vim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:gray	.vim/colors/deus.vim	/^  let s:gray = s:ds.gray_245$/;"	v
s:green	.vim/colors/deus.vim	/^  let s:green  = s:ds.bright_green$/;"	v
s:hash_match	.vim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:hls_cursor	.vim/colors/deus.vim	/^  let s:hls_cursor = get(s:ds, g:deus_hls_cursor)$/;"	v
s:hls_cursor	.vim/colors/deus.vim	/^let s:hls_cursor = s:orange$/;"	v
s:infer_properties	.vim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:install	.vim/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:inverse	.vim/colors/deus.vim	/^  let s:inverse = ''$/;"	v
s:inverse	.vim/colors/deus.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert_selection	.vim/colors/deus.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	.vim/colors/deus.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	.vim/colors/deus.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	.vim/colors/deus.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	.vim/colors/deus.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	.vim/colors/deus.vim	/^let s:invert_tabline = ''$/;"	v
s:is_dark	.vim/colors/deus.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_local_plug	.vim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_managed	.vim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_preview_window_open	.vim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_updated	.vim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_win	.vim/autoload/plug.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:italic	.vim/colors/deus.vim	/^  let s:italic = ''$/;"	v
s:italic	.vim/colors/deus.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	.vim/colors/deus.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	.vim/colors/deus.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	.vim/colors/deus.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	.vim/colors/deus.vim	/^let s:italicize_strings = ''$/;"	v
s:job_abort	.vim/autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	.vim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	.vim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_out_cb	.vim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:last_non_empty_line	.vim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_rtp	.vim/autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:lastline	.vim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:lines	.vim/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:load_plugin	.vim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:loaded	.vim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded_names	.vim/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:lod	.vim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	.vim/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	.vim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	.vim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	.vim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log4	.vim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:logpos	.vim/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	.vim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:mac_gui	.vim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:me	.vim/autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:molokai_original	.vim/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	.vim/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:names	.vim/autoload/plug.vim	/^function! s:names(...)$/;"	f
s:new_window	.vim/autoload/plug.vim	/^function! s:new_window()$/;"	f
s:none	.vim/colors/deus.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:number_column	.vim/colors/deus.vim	/^let s:number_column = s:bg4$/;"	v
s:nvim	.vim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	.vim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:orange	.vim/colors/deus.vim	/^  let s:orange = s:ds.bright_orange$/;"	v
s:parse_options	.vim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:path	.vim/autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:plug_buf	.vim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	.vim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	.vim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_window_exists	.vim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:prepare	.vim/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:preview_commit	.vim/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:progress_bar	.vim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	.vim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:purple	.vim/colors/deus.vim	/^  let s:purple = s:ds.bright_purple$/;"	v
s:reap	.vim/autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:red	.vim/colors/deus.vim	/^  let s:red    = s:ds.bright_red$/;"	v
s:regress_bar	.vim/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:reload_plugins	.vim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remove_rtp	.vim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_triggers	.vim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:reorg_rtp	.vim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:retry	.vim/autoload/plug.vim	/^function! s:retry()$/;"	f
s:revert	.vim/autoload/plug.vim	/^function! s:revert()$/;"	f
s:rm_rf	.vim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:rtp	.vim/autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
s:section	.vim/autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:shellesc	.vim/autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
s:shellesc_cmd	.vim/autoload/plug.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:sign_column	.vim/colors/deus.vim	/^    let s:sign_column = get(s:ds, g:deus_sign_column)$/;"	v
s:sign_column	.vim/colors/deus.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	.vim/colors/deus.vim	/^let s:sign_column = s:bg1$/;"	v
s:snapshot	.vim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:source	.vim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:spawn	.vim/autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:split_rtp	.vim/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:status	.vim/autoload/plug.vim	/^function! s:status()$/;"	f
s:status_load	.vim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	.vim/autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:switch_in	.vim/autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	.vim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:syntax	.vim/autoload/plug.vim	/^function! s:syntax()$/;"	f
s:system	.vim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system_chomp	.vim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:tick	.vim/autoload/plug.vim	/^function! s:tick()$/;"	f
s:to_a	.vim/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_s	.vim/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:triggers	.vim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	.vim/autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:undercurl	.vim/colors/deus.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	.vim/colors/deus.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:underline	.vim/colors/deus.vim	/^  let s:underline = ''$/;"	v
s:underline	.vim/colors/deus.vim	/^let s:underline = 'underline,'$/;"	v
s:update	.vim/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_finish	.vim/autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_impl	.vim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_python	.vim/autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_ruby	.vim/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_vim	.vim/autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:upgrade	.vim/autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	.vim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:version_requirement	.vim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:vert_split	.vim/colors/deus.vim	/^  let s:vert_split = get(s:ds, g:deus_vert_split)$/;"	v
s:vert_split	.vim/colors/deus.vim	/^let s:vert_split = s:bg2$/;"	v
s:vim8	.vim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_bg	.vim/colors/deus.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_fg	.vim/colors/deus.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:warn	.vim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:with_cd	.vim/autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
s:yellow	.vim/colors/deus.vim	/^  let s:yellow = s:ds.bright_yellow$/;"	v
sbrc	custom.aliases.bash	/^alias sbrc='source $HOME\/.bashrc'$/;"	a
show_usage	install.sh	/^function show_usage() {$/;"	f
vim	custom.aliases.bash	/^alias vim=\/usr\/local\/Cellar\/vim\/8.0.1800\/bin\/vim$/;"	a
