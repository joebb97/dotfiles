local opts = { noremap = true, silent = true}
vim.keymap.set({ 'n', 'v' }, '<Space>', '<Nop>', opts)
vim.g.mapleader = ' '
vim.g.maplocalleader = ' '

-- INOREMAP
vim.keymap.set('i', '<C-J>', '<ESC><C-W><C-J>', opts)
vim.keymap.set('i', '<C-K>', '<ESC><C-W><C-K>', opts)
vim.keymap.set('i', '<C-L>', '<ESC><C-W><C-L>', opts)
vim.keymap.set('i', '<C-H>', '<ESC><C-W><C-H>', opts)
vim.keymap.set('i', 'hh', '<ESC>', opts)

-- NNOREMAP
vim.keymap.set('n', '<C-J>', '<C-W><C-J>', opts)
vim.keymap.set('n', '<C-K>', '<C-W><C-K>', opts)
vim.keymap.set('n', '<C-L>', '<C-W><C-L>', opts)
vim.keymap.set('n', '<C-H>', '<C-W><C-H>', opts)
-- vim.keymap.set('n', '<space>', 'za', opts)
vim.keymap.set('n', 'j', 'gj', opts)
vim.keymap.set('n', 'k', 'gk', opts)
vim.keymap.set('n', 'gV', '`[v`]', opts)
vim.keymap.set('n', '<C-g>v', ':vsp +term<CR>', opts)
vim.keymap.set('n', '<C-g>%', ':vsp +term<CR>', opts)
vim.keymap.set('n', '<C-g>s', ':sp +term<CR>', opts)
vim.keymap.set('n', '<C-g>"', ':sp +term<CR>', opts)
vim.keymap.set('n', '<C-g>c', ':tabe<CR>:term<CR>', opts)
vim.keymap.set('n', '<C-g>n', 'gt', opts)
vim.keymap.set('n', '<C-g>p', 'gT', opts)
vim.keymap.set('n', '<C-g>h', '<C-W><C-h>', opts)
vim.keymap.set('n', '<C-g>j', '<C-W><C-j>', opts)
vim.keymap.set('n', '<C-g>k', '<C-W><C-k>', opts)
vim.keymap.set('n', '<C-g>l', '<C-W><C-l>', opts)
vim.keymap.set('n', '<C-g><C-H>', '<C-W><C-h>', opts)
vim.keymap.set('n', '<C-g><C-J>', '<C-W><C-j>', opts)
vim.keymap.set('n', '<C-g><C-K>', '<C-W><C-k>', opts)
vim.keymap.set('n', '<C-g><C-L>', '<C-W><C-l>', opts)
vim.keymap.set('n', '<CS-l>', 'gt', opts)
vim.keymap.set('n', '<CS-h>', 'gT', opts)

-- VNOREMAP
vim.keymap.set('v', 'K', ':m .-2<CR>==', opts)
vim.keymap.set('v', 'J', ':m .+1<CR>==', opts)
vim.keymap.set('v', '<', '<gv', opts)
vim.keymap.set('v', '>', '>gv', opts)

-- XNOREMAP
vim.keymap.set('x' ,'J', [[:move '>+1<CR>gv-gv]], opts)
vim.keymap.set('x' ,'K', [[:move '<-2<CR>gv-gv]], opts)

-- TNOREMAP
vim.keymap.set('t', '<C-g>v', '<C-\\><C-N>:vsp +term<CR>', opts)
vim.keymap.set('t', '<C-g>%', '<C-\\><C-N>:vsp +term<CR>', opts)
vim.keymap.set('t', '<C-g>s', '<C-\\><C-N>:sp +term<CR>', opts)
vim.keymap.set('t', '<C-g>"', '<C-\\><C-N>:sp +term<CR>', opts)
vim.keymap.set('t', '<C-g>c', '<C-\\><C-N>:tabe<CR>:term<CR>', opts)
vim.keymap.set('t', '<C-g>n', '<C-\\><C-N>gt', opts)
vim.keymap.set('t', '<C-g>p', '<C-\\><C-N>gT', opts)

vim.keymap.set('t', '<C-g>h', '<C-\\><C-N><C-w>h', opts)
vim.keymap.set('t', '<C-g>j', '<C-\\><C-N><C-w>j', opts)
vim.keymap.set('t', '<C-g>k', '<C-\\><C-N><C-w>k', opts)
vim.keymap.set('t', '<C-g>l', '<C-\\><C-N><C-w>l', opts)
vim.keymap.set('t', '<C-g><C-h>', '<C-\\><C-N><C-w>h', opts)
vim.keymap.set('t', '<C-g><C-j>', '<C-\\><C-N><C-w>j', opts)
vim.keymap.set('t', '<C-g><C-k>', '<C-\\><C-N><C-w>k', opts)
vim.keymap.set('t', '<C-g><C-l>', '<C-\\><C-N><C-w>l', opts)

-- LEADER KEY
vim.keymap.set('n', '<leader>st', ':sp +term<CR>', opts)
vim.keymap.set('n', '<leader>sp', ':sp<CR>', opts)
vim.keymap.set('n', '<leader>vt', ':vsp +term<CR>', opts)
vim.keymap.set('n', '<leader>vs', ':vs<CR>', opts)
-- vim.keymap.set('n', '<leader>rnw', ":! rscript -e \"library(\'knitr\');knit2pdf(\'$(ls *.Rnw)\')\"<CR>", opts)
vim.keymap.set('n', '<leader>w', ':w<CR>', opts)
vim.keymap.set('n', '<leader>q', ':q<CR>', opts)
vim.keymap.set('n', '<leader>m', ':make<CR>', opts)
vim.keymap.set('n', '<leader>j', 'Lzt', opts)
vim.keymap.set('n', '<leader>k', 'Hzb', opts)
vim.keymap.set('n', '<leader>z', '<C-w>\\|<C-w>_', opts)
vim.keymap.set('n', '<leader>x', '<C-w>=', opts)
vim.keymap.set('n', '<leader>sa', ':Save<CR>', opts)
vim.keymap.set('n', '<leader>sv', ':Svrc<CR>', opts)
vim.keymap.set('n', '<leader>ev', ':Evrc<CR>', opts)
vim.keymap.set('n', '<leader>eb', ':Ebrc<CR>', opts)
vim.keymap.set('n', '<leader>ef', ':Efc<CR>', opts)
vim.keymap.set('n', '<leader>en', ':Enc<CR>', opts)
vim.keymap.set('n', '<leader>ex', ':qa<CR>', opts)
vim.keymap.set('n', '<leader><space>', ':noh<CR>', opts)
vim.keymap.set('n', '<leader>bl', '$A{<CR>}<ESC>O', opts)
vim.keymap.set('n', '<leader>bs', '$A<CR>{<CR>}<ESC>O', opts)
vim.keymap.set('n', '<leader>nill', 'oif err != nil {<CR>return err<CR>}<ESC>', opts)
vim.keymap.set('n', '<leader>nili', 'oif err != nil {<CR>}<ESC>O', opts)
vim.keymap.set('n', '<leader>nilt', 'oif err != nil {<CR>return nil, err<CR>}<ESC>', opts)
vim.keymap.set('n', '<leader>pl', ':Vex 30<CR>', opts)
vim.keymap.set('n', '<leader>pe', ':Ex<CR>', opts)
vim.keymap.set('n', '<leader>h', ':bp<CR>', opts)
vim.keymap.set('n', '<leader>l', ':bn<CR>', opts)
vim.keymap.set('n', '<leader>cc', ':cclose<CR>', opts)
vim.keymap.set('n', '<leader>cn', ':cn<CR>', opts)
vim.keymap.set('n', '<leader>cp', ':cp<CR>', opts)
vim.keymap.set('n', '<leader>te', ':tabe<CR>', opts)

-- Diagnostic keymaps
vim.keymap.set('n', '[d', vim.diagnostic.goto_prev)
vim.keymap.set('n', ']d', vim.diagnostic.goto_next)
vim.keymap.set('n', '<leader>of', vim.diagnostic.open_float)
vim.keymap.set('n', '<leader>sl', vim.diagnostic.setloclist)

-- PLUGIN SPECIFIC LEADERS
-- vim.keymap.set('n', '<leader>nc', ':NERDTreeClose<CR>', opts)
-- vim.keymap.set('n', '<leader>nt', ':NERDTreeToggle<CR>', opts)
-- vim.keymap.set('n', '<leader>nf', ':NERDTreeFind<CR>', opts)
-- vim.keymap.set('n', '<leader>af', ':ALEFix<CR>', opts)
-- vim.keymap.set('n', '<leader>ai', ':ALEInfo<CR>', opts)
-- vim.keymap.set('n', '<leader>at', ':ALEToggle<CR>', opts)
-- vim.keymap.set('n', '<leader>ad', ':ALEGoToDefinition<CR>', opts)
-- vim.keymap.set('n', '<leader>ar', ':ALEFindReferences<CR>', opts)
-- vim.keymap.set('n', '<leader>gb', ':GoBuild<CR>', opts)
-- vim.keymap.set('n', '<leader>gf', ':GoFmt<CR>', opts)
-- vim.keymap.set('n', '<leader>gr', ':GoRun<CR>', opts)
-- vim.keymap.set('n', '<leader>gv', ':GoVet ./...<CR>', opts)
-- vim.keymap.set('n', '<leader>gl', ':GoLint ./...<CR>', opts)
-- vim.keymap.set('n', '<leader>tb', ':TagbarToggle<CR>', opts)
-- vim.keymap.set('n', '<leader>to', ':TagbarOpen fj<CR>', opts)
-- vim.keymap.set('n', '<leader>pi', ':PlugInstall<CR>', opts)
vim.keymap.set('n', '<leader>gg', ':Gitsigns toggle_signs<CR>', opts)

-- COMMAND
vim.api.nvim_create_user_command('Svrc', ':source $MYVIMRC', {})
vim.api.nvim_create_user_command('Save', ':mksession!', {})
vim.api.nvim_create_user_command('Evrc', ':e $HOME/.vimrc', {})
vim.api.nvim_create_user_command('Ebrc', ':e $HOME/.bashrc', {})
vim.api.nvim_create_user_command('Egcfg', ':e $HOME/.gitconfig', {})
vim.api.nvim_create_user_command('Efc', ':e $HOME/.config/fish/config.fish', {})
vim.api.nvim_create_user_command('Enc', ':e $HOME/.config/nvim/init.lua', {})
